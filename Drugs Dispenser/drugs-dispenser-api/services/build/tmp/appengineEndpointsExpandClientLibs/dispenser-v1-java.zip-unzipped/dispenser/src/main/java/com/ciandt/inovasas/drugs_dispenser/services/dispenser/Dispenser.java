/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-07-08 17:28:43 UTC)
 * on 2016-09-16 at 19:50:29 UTC 
 * Modify at your own risk.
 */

package com.ciandt.inovasas.drugs_dispenser.services.dispenser;

/**
 * Service definition for Dispenser (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DispenserRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Dispenser extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the dispenser library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://drugs-dispenser-includeday.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "dispenser/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Dispenser(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Dispenser(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "delete".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public Delete delete(java.lang.Long id) throws java.io.IOException {
    Delete result = new Delete(id);
    initialize(result);
    return result;
  }

  public class Delete extends DispenserRequest<Void> {

    private static final String REST_PATH = "delete/{id}";

    /**
     * Create a request for the method "delete".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     * <p> {@link
     * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected Delete(java.lang.Long id) {
      super(Dispenser.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public Delete setAlt(java.lang.String alt) {
      return (Delete) super.setAlt(alt);
    }

    @Override
    public Delete setFields(java.lang.String fields) {
      return (Delete) super.setFields(fields);
    }

    @Override
    public Delete setKey(java.lang.String key) {
      return (Delete) super.setKey(key);
    }

    @Override
    public Delete setOauthToken(java.lang.String oauthToken) {
      return (Delete) super.setOauthToken(oauthToken);
    }

    @Override
    public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Delete) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Delete setQuotaUser(java.lang.String quotaUser) {
      return (Delete) super.setQuotaUser(quotaUser);
    }

    @Override
    public Delete setUserIp(java.lang.String userIp) {
      return (Delete) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public Delete setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public Delete set(String parameterName, Object value) {
      return (Delete) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "get".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link Get#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Get get() throws java.io.IOException {
    Get result = new Get();
    initialize(result);
    return result;
  }

  public class Get extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.DispenserCollection> {

    private static final String REST_PATH = "get";

    /**
     * Create a request for the method "get".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
     * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Get() {
      super(Dispenser.this, "GET", REST_PATH, null, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.DispenserCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Get setAlt(java.lang.String alt) {
      return (Get) super.setAlt(alt);
    }

    @Override
    public Get setFields(java.lang.String fields) {
      return (Get) super.setFields(fields);
    }

    @Override
    public Get setKey(java.lang.String key) {
      return (Get) super.setKey(key);
    }

    @Override
    public Get setOauthToken(java.lang.String oauthToken) {
      return (Get) super.setOauthToken(oauthToken);
    }

    @Override
    public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Get) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Get setQuotaUser(java.lang.String quotaUser) {
      return (Get) super.setQuotaUser(quotaUser);
    }

    @Override
    public Get setUserIp(java.lang.String userIp) {
      return (Get) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String codigo;

    /**

     */
    public java.lang.String getCodigo() {
      return codigo;
    }

    public Get setCodigo(java.lang.String codigo) {
      this.codigo = codigo;
      return this;
    }

    @Override
    public Get set(String parameterName, Object value) {
      return (Get) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getByCarteirinha".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link GetByCarteirinha#execute()} method to invoke the remote operation.
   *
   * @param carteirinha
   * @return the request
   */
  public GetByCarteirinha getByCarteirinha(java.lang.String carteirinha) throws java.io.IOException {
    GetByCarteirinha result = new GetByCarteirinha(carteirinha);
    initialize(result);
    return result;
  }

  public class GetByCarteirinha extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser> {

    private static final String REST_PATH = "carteirinha/{carteirinha}";

    /**
     * Create a request for the method "getByCarteirinha".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link GetByCarteirinha#execute()} method to invoke the remote
     * operation. <p> {@link GetByCarteirinha#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param carteirinha
     * @since 1.13
     */
    protected GetByCarteirinha(java.lang.String carteirinha) {
      super(Dispenser.this, "GET", REST_PATH, null, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser.class);
      this.carteirinha = com.google.api.client.util.Preconditions.checkNotNull(carteirinha, "Required parameter carteirinha must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetByCarteirinha setAlt(java.lang.String alt) {
      return (GetByCarteirinha) super.setAlt(alt);
    }

    @Override
    public GetByCarteirinha setFields(java.lang.String fields) {
      return (GetByCarteirinha) super.setFields(fields);
    }

    @Override
    public GetByCarteirinha setKey(java.lang.String key) {
      return (GetByCarteirinha) super.setKey(key);
    }

    @Override
    public GetByCarteirinha setOauthToken(java.lang.String oauthToken) {
      return (GetByCarteirinha) super.setOauthToken(oauthToken);
    }

    @Override
    public GetByCarteirinha setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetByCarteirinha) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetByCarteirinha setQuotaUser(java.lang.String quotaUser) {
      return (GetByCarteirinha) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetByCarteirinha setUserIp(java.lang.String userIp) {
      return (GetByCarteirinha) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String carteirinha;

    /**

     */
    public java.lang.String getCarteirinha() {
      return carteirinha;
    }

    public GetByCarteirinha setCarteirinha(java.lang.String carteirinha) {
      this.carteirinha = carteirinha;
      return this;
    }

    @Override
    public GetByCarteirinha set(String parameterName, Object value) {
      return (GetByCarteirinha) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getByCodigo".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link GetByCodigo#execute()} method to invoke the remote operation.
   *
   * @param codigo
   * @return the request
   */
  public GetByCodigo getByCodigo(java.lang.String codigo) throws java.io.IOException {
    GetByCodigo result = new GetByCodigo(codigo);
    initialize(result);
    return result;
  }

  public class GetByCodigo extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser> {

    private static final String REST_PATH = "codigo/{codigo}";

    /**
     * Create a request for the method "getByCodigo".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link GetByCodigo#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetByCodigo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param codigo
     * @since 1.13
     */
    protected GetByCodigo(java.lang.String codigo) {
      super(Dispenser.this, "GET", REST_PATH, null, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser.class);
      this.codigo = com.google.api.client.util.Preconditions.checkNotNull(codigo, "Required parameter codigo must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetByCodigo setAlt(java.lang.String alt) {
      return (GetByCodigo) super.setAlt(alt);
    }

    @Override
    public GetByCodigo setFields(java.lang.String fields) {
      return (GetByCodigo) super.setFields(fields);
    }

    @Override
    public GetByCodigo setKey(java.lang.String key) {
      return (GetByCodigo) super.setKey(key);
    }

    @Override
    public GetByCodigo setOauthToken(java.lang.String oauthToken) {
      return (GetByCodigo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetByCodigo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetByCodigo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetByCodigo setQuotaUser(java.lang.String quotaUser) {
      return (GetByCodigo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetByCodigo setUserIp(java.lang.String userIp) {
      return (GetByCodigo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String codigo;

    /**

     */
    public java.lang.String getCodigo() {
      return codigo;
    }

    public GetByCodigo setCodigo(java.lang.String codigo) {
      this.codigo = codigo;
      return this;
    }

    @Override
    public GetByCodigo set(String parameterName, Object value) {
      return (GetByCodigo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getById".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link GetById#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetById getById(java.lang.Long id) throws java.io.IOException {
    GetById result = new GetById(id);
    initialize(result);
    return result;
  }

  public class GetById extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser> {

    private static final String REST_PATH = "get/{id}";

    /**
     * Create a request for the method "getById".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link GetById#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetById#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetById(java.lang.Long id) {
      super(Dispenser.this, "GET", REST_PATH, null, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetById setAlt(java.lang.String alt) {
      return (GetById) super.setAlt(alt);
    }

    @Override
    public GetById setFields(java.lang.String fields) {
      return (GetById) super.setFields(fields);
    }

    @Override
    public GetById setKey(java.lang.String key) {
      return (GetById) super.setKey(key);
    }

    @Override
    public GetById setOauthToken(java.lang.String oauthToken) {
      return (GetById) super.setOauthToken(oauthToken);
    }

    @Override
    public GetById setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetById) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetById setQuotaUser(java.lang.String quotaUser) {
      return (GetById) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetById setUserIp(java.lang.String userIp) {
      return (GetById) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetById setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetById set(String parameterName, Object value) {
      return (GetById) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "post".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link Post#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser}
   * @return the request
   */
  public Post post(com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser content) throws java.io.IOException {
    Post result = new Post(content);
    initialize(result);
    return result;
  }

  public class Post extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser> {

    private static final String REST_PATH = "new";

    /**
     * Create a request for the method "post".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link Post#execute()} method to invoke the remote operation. <p>
     * {@link Post#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser}
     * @since 1.13
     */
    protected Post(com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser content) {
      super(Dispenser.this, "POST", REST_PATH, content, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser.class);
    }

    @Override
    public Post setAlt(java.lang.String alt) {
      return (Post) super.setAlt(alt);
    }

    @Override
    public Post setFields(java.lang.String fields) {
      return (Post) super.setFields(fields);
    }

    @Override
    public Post setKey(java.lang.String key) {
      return (Post) super.setKey(key);
    }

    @Override
    public Post setOauthToken(java.lang.String oauthToken) {
      return (Post) super.setOauthToken(oauthToken);
    }

    @Override
    public Post setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Post) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Post setQuotaUser(java.lang.String quotaUser) {
      return (Post) super.setQuotaUser(quotaUser);
    }

    @Override
    public Post setUserIp(java.lang.String userIp) {
      return (Post) super.setUserIp(userIp);
    }

    @Override
    public Post set(String parameterName, Object value) {
      return (Post) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "put".
   *
   * This request holds the parameters needed by the dispenser server.  After setting any optional
   * parameters, call the {@link Put#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser}
   * @return the request
   */
  public Put put(com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser content) throws java.io.IOException {
    Put result = new Put(content);
    initialize(result);
    return result;
  }

  public class Put extends DispenserRequest<com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser> {

    private static final String REST_PATH = "update";

    /**
     * Create a request for the method "put".
     *
     * This request holds the parameters needed by the the dispenser server.  After setting any
     * optional parameters, call the {@link Put#execute()} method to invoke the remote operation. <p>
     * {@link Put#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser}
     * @since 1.13
     */
    protected Put(com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser content) {
      super(Dispenser.this, "PUT", REST_PATH, content, com.ciandt.inovasas.drugs_dispenser.services.dispenser.model.Dispenser.class);
    }

    @Override
    public Put setAlt(java.lang.String alt) {
      return (Put) super.setAlt(alt);
    }

    @Override
    public Put setFields(java.lang.String fields) {
      return (Put) super.setFields(fields);
    }

    @Override
    public Put setKey(java.lang.String key) {
      return (Put) super.setKey(key);
    }

    @Override
    public Put setOauthToken(java.lang.String oauthToken) {
      return (Put) super.setOauthToken(oauthToken);
    }

    @Override
    public Put setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Put) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Put setQuotaUser(java.lang.String quotaUser) {
      return (Put) super.setQuotaUser(quotaUser);
    }

    @Override
    public Put setUserIp(java.lang.String userIp) {
      return (Put) super.setUserIp(userIp);
    }

    @Override
    public Put set(String parameterName, Object value) {
      return (Put) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Dispenser}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Dispenser}. */
    @Override
    public Dispenser build() {
      return new Dispenser(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DispenserRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDispenserRequestInitializer(
        DispenserRequestInitializer dispenserRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(dispenserRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
